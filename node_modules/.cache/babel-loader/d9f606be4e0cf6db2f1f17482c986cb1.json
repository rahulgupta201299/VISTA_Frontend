{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web_Page\\\\vista\\\\Frontend\\\\src\\\\my_components\\\\Profile\\\\Profile.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Profile.scss';\nimport Axios from 'axios';\nimport { Link, Redirect, withRouter } from 'react-router-dom';\nimport { data } from '../About/About_Data';\nimport { connect } from 'react-redux';\nimport { setEdit } from '../redux/user/user-actions';\nimport ShowProfile from '../ShowProfile/ShowProfile';\nimport swal from 'sweetalert';\nimport url from '../../base';\n\nfunction Profile({\n  currentUser,\n  edit,\n  dispatch\n}) {\n  const [firstname, setFirstname] = useState('');\n  const [lastname, setLastname] = useState('');\n  const [Address1, setAddress1] = useState('');\n  const [Address2, setAddress2] = useState('');\n  const [zip, setZip] = useState('');\n  const [state, setState] = useState('');\n  const [city, setCity] = useState('');\n  const [DOB, setDOB] = useState('');\n  const [gender, setGender] = useState('');\n  const [school, setSchool] = useState('');\n  const [grad, setGrad] = useState('');\n  const [err, setErr] = useState('');\n  var states = [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\", \"Andaman and Nicobar\", \"Chandigarh\", \"Daman and Diu\", \"Dadar and Nagar Haveli\", \"Delhi\", \"Jammu and Kashmir\", \"Ladakh\", \"Lakshadweep\", \"Puducherry\"];\n  var grade = [\"7\", \"8\", \"9\", \"10\", \"11\", \"12\"];\n  states.sort();\n  states = states.map(item => item.toUpperCase());\n  console.log(url);\n\n  const handleUpdate = async () => {\n    setErr('');\n    /*if(gender.length===0||DOB.length===0||firstname.length===0||lastname.length===0||Address1.length===0||zip.length===0||state.length===0||city.length===0||grad.length===0||school.length===0){\r\n        setErr(' The required fields must be filled!')\r\n        return\r\n    }*/\n\n    if (firstname.length < 3 && firstname.length > 0) {\n      setErr(' Please enter your Full First Name');\n      return;\n    }\n\n    if (lastname.length < 3 && lastname.length > 0) {\n      setErr(' Please enter your Full Last Name');\n      return;\n    }\n\n    if (zip.length !== 6 && zip.length > 0) {\n      setErr(' Please enter a valid Zip Code');\n      return;\n    } else if (zip.length === 6) {\n      let isnum = /^\\d+$/.test(zip);\n\n      if (!isnum) {\n        setErr(' Please enter a valid Zip Code');\n        return;\n      }\n    }\n\n    if (Address1.length <= 5 && Address1.length > 0) {\n      setErr('Please enter a valid Address Line 1');\n      return;\n    }\n\n    if (Address2.length <= 5 && Address2.length > 0) {\n      setErr(' Please enter a valid Address Line 2');\n      return;\n    }\n\n    if (city.length < 3 && city.length > 0) {\n      setErr(' Please enter a valid city name');\n      return;\n    }\n\n    if (school.length <= 3 && school.length > 0) {\n      setErr(' Please enter a valide school/university name');\n      return;\n    }\n\n    const Alldata = {\n      email: currentUser.email,\n      firstname: firstname,\n      lastname: lastname,\n      Address1: Address1,\n      Address2: Address2,\n      Zip: zip,\n      state: state,\n      city: city,\n      DOB: DOB,\n      gender: gender,\n      school: school,\n      grade: grad\n    };\n    await Axios.post(`${url}/profile/detail/`, Alldata).then(res => {\n      if (res.data.message) {\n        swal({\n          title: \"Good job! You are Updated\",\n          text: \"Click Ok and see your updated profile\",\n          icon: \"success\"\n        }).then(res1 => {\n          window.location.reload();\n        });\n      } else if (res.data.error) {\n        swal({\n          title: \"An error occured!\",\n          text: \"Try to Update Again!\",\n          icon: \"warning\",\n          showCancelButton: true,\n          confirmButtonClass: \"btn-danger\",\n          confirmButtonText: \"Retry\",\n          closeOnCancel: false\n        }).then(res1 => {\n          window.location.reload();\n        });\n      }\n    }).catch(err => {\n      swal({\n        title: \"Network Error!\",\n        text: \"You aren't Updated. Please connect to the Internet Connection\",\n        icon: \"warning\",\n        showCancelButton: true,\n        confirmButtonClass: \"btn-danger\",\n        confirmButtonText: \"Retry\",\n        closeOnCancel: false\n      }).then(res1 => {\n        window.location.reload();\n      });\n    }); //console.log(Alldata)\n    //console.log(firstname,lastname,Address1,Address2,zip,state,city,DOB,gender,school,grad)\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, edit ? /*#__PURE__*/React.createElement(ShowProfile, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 18\n    }\n  }) : /*#__PURE__*/React.createElement(\"div\", {\n    className: \"initiate\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"nav\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }, \" * Fill only those fields which you want to update!\"), /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }\n  }, err), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row g-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"firstname\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 21\n    }\n  }, \"First Name \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 78\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setFirstname(e.target.value),\n    className: \"form-control\",\n    id: \"firstname\",\n    placeholder: \"First Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"lastname\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 21\n    }\n  }, \"Last Name \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 76\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setLastname(e.target.value),\n    className: \"form-control\",\n    id: \"lastname\",\n    placeholder: \"Last Name\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputAddress\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 21\n    }\n  }, \"Address \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 78\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setAddress1(e.target.value),\n    className: \"form-control\",\n    id: \"inputAddress\",\n    placeholder: \"Address line 1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputAddress2\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 21\n    }\n  }, \"Address 2\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setAddress2(e.target.value),\n    className: \"form-control\",\n    id: \"inputAddress2\",\n    placeholder: \"Address line 2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputZip\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 21\n    }\n  }, \"Zip \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155,\n      columnNumber: 70\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setZip(e.target.value),\n    className: \"form-control\",\n    id: \"inputZip\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputState\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 21\n    }\n  }, \"State \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 74\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"inputState\",\n    onChange: e => setState(e.target.value),\n    className: \"form-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 21\n    }\n  }, \"Choose...\"), states.map((item, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 29\n    }\n  }, item)))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputCity\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 21\n    }\n  }, \"City \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 72\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setCity(e.target.value),\n    className: \"form-control\",\n    id: \"inputCity\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"birthday\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 21\n    }\n  }, \"Date Of Birth \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 80\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"date\",\n    onChange: e => setDOB(e.target.value),\n    id: \"birthday\",\n    className: \"form-control\",\n    name: \"birthday\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 179,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"gender\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 21\n    }\n  }, \"Gender \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 71\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    onChange: e => setGender(e.target.value),\n    type: \"radio\",\n    name: \"inlineRadioOptions\",\n    id: \"inlineRadio1\",\n    value: \"male\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    for: \"inlineRadio1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 184,\n      columnNumber: 29\n    }\n  }, \"Male\")), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"form-check form-check-inline\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 25\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    className: \"form-check-input\",\n    onChange: e => setGender(e.target.value),\n    type: \"radio\",\n    name: \"inlineRadioOptions\",\n    id: \"inlineRadio2\",\n    value: \"female\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 29\n    }\n  }), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"form-check-label\",\n    for: \"inlineRadio2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 29\n    }\n  }, \"Female\"))), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputSchool\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 21\n    }\n  }, \"School/University \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 87\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    onChange: e => setSchool(e.target.value),\n    className: \"form-control\",\n    id: \"inputSchool\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 193,\n      columnNumber: 21\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 195,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-4\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"label\", {\n    for: \"inputGrade\",\n    className: \"form-label\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 21\n    }\n  }, \"Grade \", /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      \"color\": \"red\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 74\n    }\n  }, \"*\")), /*#__PURE__*/React.createElement(\"select\", {\n    id: \"inputGrade\",\n    onChange: e => setGrad(e.target.value),\n    className: \"form-select\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    selected: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 21\n    }\n  }, \"Choose...\"), grade.map((item, i) => /*#__PURE__*/React.createElement(\"option\", {\n    key: i,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 29\n    }\n  }, item))))), /*#__PURE__*/React.createElement(\"br\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      marginRight: \"10px\",\n      marginBottom: \"14px\"\n    },\n    className: \"d-grid gap-2 d-md-flex justify-content-md-end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-primary me-md-2\",\n    onClick: handleUpdate,\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 17\n    }\n  }, \"Update\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"btn btn-outline-secondary\",\n    onClick: () => dispatch(setEdit(true)),\n    style: {\n      borderRadius: \"5px\"\n    },\n    type: \"button\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 17\n    }\n  }, \"Cancel\")))));\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  edit: state.user.edit\n});\n\nexport default withRouter(connect(mapStateToProps, null)(Profile));\n/*\r\n<div className=\"col-12\">\r\n                    <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" />\r\n                    <label className=\"form-check-label\" for=\"gridCheck\">\r\n                        Check me out\r\n                    </label>\r\n                    </div>\r\n                </div>\r\n                */","map":{"version":3,"sources":["D:/Web_Page/vista/Frontend/src/my_components/Profile/Profile.js"],"names":["React","useState","useEffect","Axios","Link","Redirect","withRouter","data","connect","setEdit","ShowProfile","swal","url","Profile","currentUser","edit","dispatch","firstname","setFirstname","lastname","setLastname","Address1","setAddress1","Address2","setAddress2","zip","setZip","state","setState","city","setCity","DOB","setDOB","gender","setGender","school","setSchool","grad","setGrad","err","setErr","states","grade","sort","map","item","toUpperCase","console","log","handleUpdate","length","isnum","test","Alldata","email","Zip","post","then","res","message","title","text","icon","res1","window","location","reload","error","showCancelButton","confirmButtonClass","confirmButtonText","closeOnCancel","catch","e","target","value","i","marginRight","marginBottom","borderRadius","mapStateToProps","user"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport './Profile.scss'\r\nimport Axios from 'axios'\r\nimport {Link, Redirect, withRouter} from 'react-router-dom'\r\nimport { data } from '../About/About_Data'\r\nimport { connect } from 'react-redux'\r\nimport {setEdit} from '../redux/user/user-actions'\r\nimport ShowProfile from '../ShowProfile/ShowProfile'\r\nimport swal from 'sweetalert'\r\nimport url from '../../base' \r\nfunction Profile({currentUser,edit,dispatch}) {\r\n    const [firstname,setFirstname]=useState('')\r\n    const [lastname,setLastname]=useState('')\r\n    const [Address1,setAddress1]=useState('')\r\n    const [Address2,setAddress2]=useState('')\r\n    const [zip,setZip]=useState('')\r\n    const [state,setState]=useState('')\r\n    const [city,setCity]=useState('')\r\n    const [DOB,setDOB]=useState('')\r\n    const [gender,setGender]=useState('')\r\n    const [school,setSchool]=useState('')\r\n    const [grad,setGrad]=useState('')\r\n    const [err,setErr]=useState('')\r\n\r\n    var states=[\"Andhra Pradesh\",\"Arunachal Pradesh\",\"Assam\",\"Bihar\",\"Chhattisgarh\",\"Goa\",\"Gujarat\",\"Haryana\",\"Himachal Pradesh\",\"Jharkhand\",\"Karnataka\",\"Kerala\",\"Madhya Pradesh\",\"Maharashtra\",\"Manipur\",\"Meghalaya\",\"Mizoram\",\"Nagaland\",\"Odisha\",\"Punjab\",\"Rajasthan\",\"Sikkim\",\"Tamil Nadu\",\"Telangana\",\"Tripura\",\"Uttar Pradesh\",\"Uttarakhand\",\"West Bengal\",\"Andaman and Nicobar\",\"Chandigarh\",\"Daman and Diu\",\"Dadar and Nagar Haveli\",\"Delhi\",\"Jammu and Kashmir\",\"Ladakh\",\"Lakshadweep\",\"Puducherry\"]\r\n    var grade=[\"7\",\"8\",\"9\",\"10\",\"11\",\"12\"]\r\n    states.sort()\r\n    states=states.map(item => item.toUpperCase())\r\n    console.log(url)\r\n    const handleUpdate=async()=>{\r\n        setErr('')\r\n        /*if(gender.length===0||DOB.length===0||firstname.length===0||lastname.length===0||Address1.length===0||zip.length===0||state.length===0||city.length===0||grad.length===0||school.length===0){\r\n            setErr(' The required fields must be filled!')\r\n            return\r\n        }*/\r\n        if(firstname.length<3&&firstname.length>0){\r\n            setErr(' Please enter your Full First Name')\r\n            return\r\n        }\r\n        if(lastname.length<3&&lastname.length>0){\r\n            setErr(' Please enter your Full Last Name')\r\n            return\r\n        }\r\n        if(zip.length!==6 && zip.length>0){\r\n            setErr(' Please enter a valid Zip Code')\r\n            return\r\n        }\r\n        else if(zip.length===6){\r\n            let isnum = /^\\d+$/.test(zip);\r\n            if(!isnum){\r\n                setErr(' Please enter a valid Zip Code')\r\n                return\r\n            } \r\n        }\r\n        if(Address1.length<=5 && Address1.length>0){\r\n            setErr('Please enter a valid Address Line 1')\r\n            return\r\n        }\r\n        if(Address2.length<=5 && Address2.length>0){\r\n            setErr(' Please enter a valid Address Line 2')\r\n            return\r\n        }\r\n        if(city.length<3 && city.length>0){\r\n            setErr(' Please enter a valid city name')\r\n            return\r\n        }\r\n        if(school.length<=3 && school.length>0){\r\n            setErr(' Please enter a valide school/university name')\r\n            return\r\n        }\r\n        \r\n        const Alldata={\r\n            email: currentUser.email,\r\n            firstname:firstname,\r\n            lastname:lastname,\r\n            Address1:Address1,\r\n            Address2:Address2,\r\n            Zip:zip,\r\n            state:state,\r\n            city:city,\r\n            DOB:DOB,\r\n            gender:gender,\r\n            school:school,\r\n            grade:grad\r\n        }\r\n\r\n        await Axios.post(`${url}/profile/detail/`,Alldata).then(res=>{\r\n            if(res.data.message){\r\n                swal({\r\n                    title: \"Good job! You are Updated\",\r\n                    text: \"Click Ok and see your updated profile\",\r\n                    icon: \"success\",\r\n                  }).then(res1=>{\r\n                      window.location.reload()\r\n                  })\r\n            }\r\n            else if(res.data.error){\r\n                swal({\r\n                    title:\"An error occured!\",\r\n                    text: \"Try to Update Again!\",\r\n                    icon:\"warning\",\r\n                    showCancelButton: true,\r\n                    confirmButtonClass: \"btn-danger\",\r\n                    confirmButtonText: \"Retry\",\r\n                    closeOnCancel: false\r\n                }).then(res1=>{\r\n                    window.location.reload()\r\n                })\r\n            }\r\n        }).catch(err=>{\r\n            swal({\r\n                title:\"Network Error!\",\r\n                text: \"You aren't Updated. Please connect to the Internet Connection\",\r\n                icon:\"warning\",\r\n                showCancelButton: true,\r\n                confirmButtonClass: \"btn-danger\",\r\n                confirmButtonText: \"Retry\",\r\n                closeOnCancel: false\r\n            }).then(res1=>{\r\n                window.location.reload()\r\n            })\r\n        })\r\n        \r\n        //console.log(Alldata)\r\n        //console.log(firstname,lastname,Address1,Address2,zip,state,city,DOB,gender,school,grad)\r\n    }\r\n\r\n    return (\r\n        <>\r\n        {\r\n            edit?<ShowProfile />:(\r\n                <div className=\"initiate\">\r\n            <nav>\r\n            <p style={{\"color\":\"red\"}}> * Fill only those fields which you want to update!</p>\r\n            <p style={{\"color\":\"red\"}}>{err}</p>\r\n            <div className=\"row g-4\">\r\n                \r\n                <div className=\"col-md-6\">\r\n                    <label for=\"firstname\" className=\"form-label\">First Name <span style={{\"color\":\"red\"}}>*</span></label>\r\n                    <input type=\"text\" onChange={(e)=>setFirstname(e.target.value)} className=\"form-control\" id=\"firstname\" placeholder=\"First Name\" />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <label for=\"lastname\" className=\"form-label\">Last Name <span style={{\"color\":\"red\"}}>*</span></label>\r\n                    <input type=\"text\" onChange={(e)=>setLastname(e.target.value)} className=\"form-control\" id=\"lastname\" placeholder=\"Last Name\" />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <label for=\"inputAddress\" className=\"form-label\">Address <span style={{\"color\":\"red\"}}>*</span></label>\r\n                    <input type=\"text\"onChange={(e)=>setAddress1(e.target.value)} className=\"form-control\" id=\"inputAddress\" placeholder=\"Address line 1\" />\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <label for=\"inputAddress2\" className=\"form-label\">Address 2</label>\r\n                    <input type=\"text\" onChange={(e)=>setAddress2(e.target.value)} className=\"form-control\" id=\"inputAddress2\" placeholder=\"Address line 2\" />\r\n                </div>\r\n                <div className=\"col-md-2\">\r\n                    <label for=\"inputZip\" className=\"form-label\">Zip <span style={{\"color\":\"red\"}}>*</span></label>\r\n                    <input type=\"text\" onChange={(e)=>setZip(e.target.value)} className=\"form-control\" id=\"inputZip\" />\r\n                </div>\r\n                <div className=\"col-md-4\">\r\n                    <label for=\"inputState\" className=\"form-label\">State <span style={{\"color\":\"red\"}}>*</span></label>\r\n                    <select id=\"inputState\" onChange={(e)=>setState(e.target.value)} className=\"form-select\">\r\n                    <option selected>Choose...</option>\r\n                    {\r\n                        states.map((item,i)=>(\r\n                            <option key={i}>{item}</option>\r\n                        ))\r\n                    }\r\n                    </select>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <label for=\"inputCity\" className=\"form-label\">City <span style={{\"color\":\"red\"}}>*</span></label>\r\n                    <input type=\"text\" onChange={(e)=>setCity(e.target.value)} className=\"form-control\" id=\"inputCity\" />\r\n                </div>\r\n                \r\n                \r\n                <div className=\"col-md-6\">\r\n                    <label for=\"birthday\" className=\"form-label\">Date Of Birth <span style={{\"color\":\"red\"}}>*</span></label>\r\n                    <input type=\"date\" onChange={(e)=>setDOB(e.target.value)} id=\"birthday\" className=\"form-control\" name=\"birthday\" />\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <label for=\"gender\" className=\"form-label\">Gender <span style={{\"color\":\"red\"}}>*</span></label>\r\n                    <br />\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" onChange={(e)=>setGender(e.target.value)} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio1\" value=\"male\" />\r\n                            <label className=\"form-check-label\" for=\"inlineRadio1\">Male</label>\r\n                        </div>\r\n                        <div className=\"form-check form-check-inline\">\r\n                            <input className=\"form-check-input\" onChange={(e)=>setGender(e.target.value)} type=\"radio\" name=\"inlineRadioOptions\" id=\"inlineRadio2\" value=\"female\" />\r\n                            <label className=\"form-check-label\" for=\"inlineRadio2\">Female</label>\r\n                        </div>\r\n                </div>\r\n                <div className=\"col-md-6\">\r\n                    <label for=\"inputSchool\" className=\"form-label\">School/University <span style={{\"color\":\"red\"}}>*</span></label>\r\n                    <input type=\"text\" onChange={(e)=>setSchool(e.target.value)} className=\"form-control\" id=\"inputSchool\" />\r\n                </div>\r\n                <div className=\"col-md-1\"></div>\r\n            <div className=\"col-md-4\">\r\n                    <label for=\"inputGrade\" className=\"form-label\">Grade <span style={{\"color\":\"red\"}}>*</span></label>\r\n                    <select id=\"inputGrade\" onChange={(e)=>setGrad(e.target.value)} className=\"form-select\">\r\n                    <option selected>Choose...</option>\r\n                    {\r\n                        grade.map((item,i)=>(\r\n                            <option key={i}>{item}</option>\r\n                        ))\r\n                    }\r\n                    </select>\r\n                </div>\r\n            </div>\r\n            <br />\r\n            <div style={{marginRight: \"10px\",marginBottom:\"14px\"}} className=\"d-grid gap-2 d-md-flex justify-content-md-end\">\r\n                <button className=\"btn btn-primary me-md-2\" onClick={handleUpdate} type=\"button\">Update</button>\r\n                <button className=\"btn btn-outline-secondary\" onClick={()=>dispatch(setEdit(true))} style={{borderRadius:\"5px\"}} type=\"button\">Cancel</button>\r\n            </div>\r\n        </nav>\r\n        </div>\r\n            )\r\n        }\r\n        </>\r\n    )\r\n}\r\nconst mapStateToProps=(state)=>({\r\n    currentUser: state.user.currentUser,\r\n    edit:state.user.edit\r\n})\r\nexport default withRouter(connect(mapStateToProps,null)(Profile))\r\n/*\r\n<div className=\"col-12\">\r\n                    <div className=\"form-check\">\r\n                    <input className=\"form-check-input\" type=\"checkbox\" id=\"gridCheck\" />\r\n                    <label className=\"form-check-label\" for=\"gridCheck\">\r\n                        Check me out\r\n                    </label>\r\n                    </div>\r\n                </div>\r\n                */\r\n"]},"metadata":{},"sourceType":"module"}