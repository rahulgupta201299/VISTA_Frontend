{"ast":null,"code":"var _jsxFileName = \"D:\\\\Web_Page\\\\vista\\\\Frontend\\\\src\\\\my_components\\\\Signin\\\\Signin.js\";\nimport React, { useState, useEffect } from 'react';\nimport './Signin.scss';\nimport { Button } from '../new_Button/new_Button';\nimport { withRouter } from 'react-router-dom';\nimport FormInput from '../FormInput/FormInput';\nimport { createDB, setCurrentUser } from '../redux/user/user-actions';\nimport { setVerify, setError, setUser, setID, setTimeOut } from '../redux/userError/userError-actions'; //import {signInWithGoogle} from '../Firebase/FirebaseSTUD'\n\nimport { auth, createUserProfileDocument, firestore } from '../Firebase/FirebaseSTUD';\nimport firebase from '../Firebase/FirebaseSTUD';\nimport { connect } from 'react-redux';\nimport swal from 'sweetalert'; //import OtpInput from 'react-otp-input';\n\nfunction Signin({\n  currentUser,\n  currentVer,\n  dispatch,\n  history,\n  currentErr\n}) {\n  const [disable, setDisable] = useState(true);\n  const [err, setErr] = useState('');\n  const [verify, IsVerified] = useState(false);\n  const [email, setEmail] = useState('');\n  const [Fname, setFname] = useState('');\n  const [Lname, setLname] = useState('');\n  const [state, setState] = useState('');\n  const [pin, Setpin] = useState('');\n  const [teach, setTeach] = useState(false);\n  const [btn, setButton] = useState(false);\n  const [stud, setStud] = useState(true);\n  const [password, setPassword] = useState('');\n  const [login, setLogin] = useState(true);\n  const [phone, setPhone] = useState('');\n  const [signup, setSignup] = useState(false);\n  const [grade, setGrade] = useState('');\n  const color1 = login ? \"green\" : \"blue\";\n  const color2 = signup ? \"green\" : \"blue\";\n\n  const showButton = () => {\n    if (window.innerWidth <= 960) {\n      setButton(true);\n    } else {\n      setButton(false);\n    }\n  };\n\n  const handleToggle1 = () => {\n    setTeach(true);\n    setStud(false);\n  };\n\n  const handleToggle2 = () => {\n    setStud(true);\n    setTeach(false);\n  };\n\n  const handleToggle3 = () => {\n    setLogin(true);\n    setSignup(false);\n  };\n\n  const handleToggle4 = () => {\n    setLogin(false);\n    setSignup(true);\n  };\n\n  async function signInWithGoogle() {\n    var username;\n    if (stud) username = \"StudentUsers\";\n    if (teach) username = \"TeacherUsers\";\n    const provider = new firebase.auth.GoogleAuthProvider();\n    provider.setCustomParameters({\n      prompt: 'select_account'\n    });\n    dispatch(setUser(username));\n    await auth.signInWithPopup(provider);\n    var z = auth.currentUser;\n    var flag = 0;\n    firestore.collection(`${username}`).get().then(query => {\n      query.forEach(doc => {\n        if (z.email === doc.data().email) {\n          flag = 1;\n          dispatch(setID(doc.id));\n        }\n      });\n\n      if (flag) {\n        history.push(\"/\");\n        window.location.reload();\n      } else {\n        setErr('You may be login with diff user (Student/Teacher) or maybe you are not registered');\n        auth.signOut();\n      }\n    });\n  }\n\n  const handlePhone = e => {\n    var num = e.target.value;\n    setPhone(num);\n\n    if (num.match(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/) && num.length === 10) {\n      setDisable(false);\n      setErr('');\n    } else {\n      setDisable(true);\n      setErr(\"Invalid Phone Number\");\n    }\n  };\n\n  const setUpRecaptcha = () => {\n    window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha', {\n      'size': 'invisible',\n      'callback': function (response) {\n        // reCAPTCHA solved, allow signInWithPhoneNumber.\n        handleOTP();\n      },\n      'expired-callback': () => {\n        setErr(\"Response expired. Please solve reCAPTCHA again.\");\n      }\n    });\n  };\n\n  const handleOTP = e => {\n    e.preventDefault();\n\n    if (!phone.match(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/)) {\n      return;\n    }\n\n    setDisable(true);\n    setUpRecaptcha();\n    setErr(\"Please Enter OTP Coming As Prompt!\");\n    var phoneNumber = \"+91\" + phone;\n    var appVerifier = window.recaptchaVerifier;\n    auth.signInWithPhoneNumber(phoneNumber, appVerifier).then(function (confirmationResult) {\n      // SMS sent. Prompt user to type the code from the message, then sign the\n      // user in with confirmationResult.confirm(code).\n      window.confirmationResult = confirmationResult;\n      var code = window.prompt(\"Enter the OTP\");\n      confirmationResult.confirm(code).then(function (result) {\n        // User signed in successfully.\n        var user = result.user;\n\n        if (user) {\n          swal({\n            title: \"OTP Verified!\",\n            text: \"You mobile no. is verified! Proceed further and fill all remaining details!\",\n            icon: \"success\"\n          });\n          setErr(\"\");\n          IsVerified(true);\n        }\n      }).catch(function (error) {\n        // User couldn't sign in (bad verification code?)\n        // ...\n        swal({\n          title: \"Not Verified\",\n          text: \"Incorrect or Bad Verification Code\",\n          icon: \"warning\"\n        }).then(res1 => {\n          window.location.reload();\n        });\n        setErr(error.message + \" Reload and Try Again\");\n      });\n    }).catch(function (error) {\n      // Error; SMS not sent\n      // ...\n      swal({\n        title: \"Some error Occured. Try Again Later!\",\n        text: \"SMS not sent. Retry!\",\n        icon: \"warning\",\n        confirmButtonClass: \"btn-danger\",\n        confirmButtonText: \"Retry\"\n      }).then(res1 => {\n        window.location.reload();\n      });\n      setErr(error.message + \" Reload and Try Again\");\n    });\n  };\n\n  async function handleResetPassword(e) {\n    e.preventDefault();\n    var x = window.prompt(\"Enter your existing Email Id\");\n\n    if (x) {\n      try {\n        var user = await auth.fetchSignInMethodsForEmail(x);\n\n        if (user.length === 0) {\n          setErr('Please register! Your email is not registered or please enter the existing Email');\n        } else {\n          auth.sendPasswordResetEmail(x);\n          setErr(\"Reset password link has been sent to your email!\");\n        }\n      } catch (err) {\n        setErr(err.message);\n      }\n    }\n  }\n\n  async function handleLogin(e) {\n    e.preventDefault();\n\n    try {\n      var username;\n      if (stud) username = \"StudentUsers\";\n      if (teach) username = \"TeacherUsers\";\n      dispatch(setUser(username));\n      await auth.signInWithEmailAndPassword(email, password);\n      var z = auth.currentUser;\n      const userRef = firestore.doc(`${username}/${z.uid}`);\n      const snapShot = await userRef.get();\n\n      if (!snapShot.exists) {\n        dispatch(setVerify(false));\n        setErr('You are trying to get login as different user (Student/Teacher)');\n        auth.signOut(); //window.location.reload()\n      } else {\n        if (z.emailVerified) {\n          dispatch(setID(z.uid));\n          history.push(\"/\");\n          setErr(\"\");\n          window.location.reload();\n        } else {\n          dispatch(setVerify(true));\n          z.sendEmailVerification();\n          setErr('Please Verify the mail and Log In!');\n        }\n      }\n    } catch (error) {\n      setErr(error.message);\n      console.log(error.message);\n    }\n  }\n\n  async function handleRegister(e) {\n    e.preventDefault();\n\n    if (!verify) {\n      setErr(\"Please verify the PhoneNumber\");\n      return;\n    }\n\n    if (grade === '') {\n      setErr('Please provide your Grade and then Register!');\n      return;\n    }\n\n    if (state === \"\") {\n      setErr(\"Please provide your State and then Register\");\n      return;\n    }\n\n    try {\n      var username;\n\n      if (stud) {\n        username = \"StudentUsers\";\n      }\n\n      if (teach) {\n        username = \"TeacherUsers\";\n      }\n\n      const {\n        user\n      } = await auth.createUserWithEmailAndPassword(email, password);\n      var displayName = Fname + \" \" + Lname;\n      displayName = displayName.toUpperCase();\n      createUserProfileDocument(user, username, {\n        displayName,\n        grade,\n        phone,\n        state,\n        pin\n      });\n      setLogin(true);\n      setSignup(false);\n      setErr('');\n    } catch (error) {\n      setErr(error.message);\n      console.log(error.message);\n    }\n  }\n\n  var data = [\"Andhra Pradesh\", \"Arunachal Pradesh\", \"Assam\", \"Bihar\", \"Chhattisgarh\", \"Goa\", \"Gujarat\", \"Haryana\", \"Himachal Pradesh\", \"Jharkhand\", \"Karnataka\", \"Kerala\", \"Madhya Pradesh\", \"Maharashtra\", \"Manipur\", \"Meghalaya\", \"Mizoram\", \"Nagaland\", \"Odisha\", \"Punjab\", \"Rajasthan\", \"Sikkim\", \"Tamil Nadu\", \"Telangana\", \"Tripura\", \"Uttar Pradesh\", \"Uttarakhand\", \"West Bengal\", \"Andaman and Nicobar\", \"Chandigarh\", \"Daman and Diu\", \"Dadar and Nagar Haveli\", \"Delhi\", \"Jammu and Kashmir\", \"Ladakh\", \"Lakshadweep\", \"Puducherry\"];\n  data.sort();\n  data = data.map(item => item.toUpperCase());\n  useEffect(() => {\n    showButton();\n    window.addEventListener('resize', showButton);\n  }, []);\n  var change = btn ? \"34%\" : \"38%\";\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"initial\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"section\", {\n    className: \"toggle-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    buttonStyle: \"btn--outline\",\n    buttonSize: btn ? \"btn-medium\" : \"btn--wide\",\n    buttonColor: teach ? \"green\" : \"blue\",\n    onClick: handleToggle1,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 265,\n      columnNumber: 21\n    }\n  }, \"Teacher\"), /*#__PURE__*/React.createElement(Button, {\n    buttonStyle: \"btn--outline\",\n    buttonSize: btn ? \"btn-medium\" : \"btn--wide\",\n    buttonColor: stud ? \"green\" : \"blue\",\n    onClick: handleToggle2,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 21\n    }\n  }, \"Student\")), /*#__PURE__*/React.createElement(\"section\", {\n    className: \"form-container\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"toggle\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    className: `signin ${color1}`,\n    onClick: handleToggle3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 25\n    }\n  }, \"Sign In\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: `signin ${color2}`,\n    onClick: handleToggle4,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 25\n    }\n  }, \"Sign Up\")), login ? /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"green\",\n      marginLeft: \"28%\",\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 33\n    }\n  }, \"Login As a \", stud ? \"Student\" : \"Teacher\"), currentVer ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"green\",\n      margin: \"7px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 44\n    }\n  }, \"Please Verify Your Email And Log In Again (Link Has Been Sent)!\") : null, currentUser ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"green\",\n      marginLeft: \"35%\",\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 281,\n      columnNumber: 45\n    }\n  }, \"You are Logged In!\") : null, err ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      margin: \"7px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 38\n    }\n  }, err) : \"\", /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleLogin,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 287,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: change\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    buttonStyle: \"btn--primary\",\n    buttonColor: \"green\",\n    buttonSize: btn ? \"btn--mobile\" : \"btn--medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290,\n      columnNumber: 67\n    }\n  }, \"Login\"))), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"reset\",\n    onClick: handleResetPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 29\n    }\n  }, \"Reset Password\"), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: \"44%\",\n      fontWeight: \"bold\",\n      color: \"black\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 33\n    }\n  }, \"Or\"), /*#__PURE__*/React.createElement(\"button\", {\n    className: \"signinwithGoogle\",\n    onClick: signInWithGoogle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 33\n    }\n  }, \"Sign In With Google\")) : /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"green\",\n      marginLeft: \"28%\",\n      marginTop: \"5px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 298,\n      columnNumber: 30\n    }\n  }, \"Register As a \", stud ? \"Student\" : \"Teacher\"), err ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      color: \"red\",\n      margin: \"7px\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300,\n      columnNumber: 38\n    }\n  }, err) : \"\", /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleRegister,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 29\n    }\n  }, /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    value: Fname,\n    onChange: e => setFname(e.target.value),\n    placeholder: \"First Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"text\",\n    value: Lname,\n    onChange: e => setLname(e.target.value),\n    placeholder: \"Last Name\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"select\",\n    onChange: e => setGrade(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 305,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 37\n    }\n  }, \"Grade\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 68\n    }\n  }, \"7\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"8\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 96\n    }\n  }, \"8\"), /*#__PURE__*/React.createElement(\"option\", {\n    class: \"9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 124\n    }\n  }, \"9\"), /*#__PURE__*/React.createElement(\"option\", {\n    value: \"10\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 152\n    }\n  }, \"10\")), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"email\",\n    value: email,\n    onChange: e => setEmail(e.target.value),\n    placeholder: \"Email\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 308,\n      columnNumber: 33\n    }\n  }), verify ? /*#__PURE__*/React.createElement(FormInput, {\n    type: \"phone\",\n    value: phone,\n    onChange: handlePhone,\n    placeholder: \"Phone No.\",\n    disabled: true,\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 44\n    }\n  }) : /*#__PURE__*/React.createElement(FormInput, {\n    type: \"phone\",\n    value: phone,\n    onChange: handlePhone,\n    placeholder: \"Phone No.\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 150\n    }\n  }), verify ? /*#__PURE__*/React.createElement(\"p\", {\n    style: {\n      marginLeft: \"18%\",\n      color: \"green\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 44\n    }\n  }, \"PhoneNumber is Verified\") : /*#__PURE__*/React.createElement(Button, {\n    point: disable,\n    id: \"recaptcha\",\n    buttonStyle: \"btn--primary\",\n    buttonColor: \"blue\",\n    buttonSize: \"btn--medium\",\n    onClick: handleOTP,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 313,\n      columnNumber: 116\n    }\n  }, \"Get OTP\"), /*#__PURE__*/React.createElement(\"select\", {\n    className: \"select\",\n    style: {\n      backgroundColor: \"white\"\n    },\n    onChange: e => setState(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 37\n    }\n  }, /*#__PURE__*/React.createElement(\"option\", {\n    value: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 319,\n      columnNumber: 41\n    }\n  }, \"State/Union Territory\"), data.map((item, i) => {\n    return /*#__PURE__*/React.createElement(\"option\", {\n      key: i,\n      value: item,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 323,\n        columnNumber: 49\n      }\n    }, item);\n  })), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"number\",\n    value: pin,\n    onChange: e => Setpin(e.target.value),\n    placeholder: \"PIN Code\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(FormInput, {\n    type: \"password\",\n    value: password,\n    onChange: e => setPassword(e.target.value),\n    placeholder: \"Password\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 330,\n      columnNumber: 33\n    }\n  }), /*#__PURE__*/React.createElement(\"span\", {\n    style: {\n      marginLeft: change\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 33\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    buttonStyle: \"btn--primary\",\n    buttonColor: \"green\",\n    buttonSize: btn ? \"btn--mobile\" : \"btn--medium\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331,\n      columnNumber: 67\n    }\n  }, \"Register\")))))));\n}\n\nconst mapStateToProps = state => ({\n  currentUser: state.user.currentUser,\n  currentVer: state.userError.currentVer,\n  currentErr: state.userError.error\n});\n\nexport default withRouter(connect(mapStateToProps, null)(Signin));\n/*\r\n\r\n\r\n        var x= await fetch(\"http://127.0.0.1:8000/api/register/\",{\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n            headers:{\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        }).then((res)=>{\r\n            if(res.ok){\r\n                console.log(res.json())\r\n            }\r\n            else{\r\n                res.json().then(err=>console.log(err.Error))\r\n            }\r\n        })\r\n\r\n\r\n\r\n        \r\n\r\n*/","map":{"version":3,"sources":["D:/Web_Page/vista/Frontend/src/my_components/Signin/Signin.js"],"names":["React","useState","useEffect","Button","withRouter","FormInput","createDB","setCurrentUser","setVerify","setError","setUser","setID","setTimeOut","auth","createUserProfileDocument","firestore","firebase","connect","swal","Signin","currentUser","currentVer","dispatch","history","currentErr","disable","setDisable","err","setErr","verify","IsVerified","email","setEmail","Fname","setFname","Lname","setLname","state","setState","pin","Setpin","teach","setTeach","btn","setButton","stud","setStud","password","setPassword","login","setLogin","phone","setPhone","signup","setSignup","grade","setGrade","color1","color2","showButton","window","innerWidth","handleToggle1","handleToggle2","handleToggle3","handleToggle4","signInWithGoogle","username","provider","GoogleAuthProvider","setCustomParameters","prompt","signInWithPopup","z","flag","collection","get","then","query","forEach","doc","data","id","push","location","reload","signOut","handlePhone","e","num","target","value","match","length","setUpRecaptcha","recaptchaVerifier","RecaptchaVerifier","response","handleOTP","preventDefault","phoneNumber","appVerifier","signInWithPhoneNumber","confirmationResult","code","confirm","result","user","title","text","icon","catch","error","res1","message","confirmButtonClass","confirmButtonText","handleResetPassword","x","fetchSignInMethodsForEmail","sendPasswordResetEmail","handleLogin","signInWithEmailAndPassword","userRef","uid","snapShot","exists","emailVerified","sendEmailVerification","console","log","handleRegister","createUserWithEmailAndPassword","displayName","toUpperCase","sort","map","item","addEventListener","change","color","marginLeft","marginTop","margin","fontWeight","backgroundColor","i","mapStateToProps","userError"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from 'react'\r\nimport './Signin.scss'\r\nimport {Button} from '../new_Button/new_Button'\r\nimport {withRouter} from 'react-router-dom'\r\nimport FormInput from '../FormInput/FormInput'\r\nimport {createDB,setCurrentUser} from '../redux/user/user-actions'\r\nimport {setVerify,setError,setUser,setID,setTimeOut} from '../redux/userError/userError-actions'\r\n//import {signInWithGoogle} from '../Firebase/FirebaseSTUD'\r\nimport { auth, createUserProfileDocument,firestore } from '../Firebase/FirebaseSTUD'\r\nimport firebase from '../Firebase/FirebaseSTUD'\r\nimport { connect } from 'react-redux'\r\nimport swal from 'sweetalert'\r\n//import OtpInput from 'react-otp-input';\r\n\r\nfunction Signin({currentUser,currentVer,dispatch,history,currentErr}) {\r\n    const [disable,setDisable]=useState(true)\r\n    const [err,setErr]=useState('')\r\n    const [verify,IsVerified]=useState(false)\r\n    const [email,setEmail]=useState('')\r\n    const [Fname,setFname]=useState('')\r\n    const [Lname,setLname]=useState('')\r\n    const [state,setState]=useState('')\r\n    const [pin,Setpin]=useState('')\r\n    const [teach,setTeach]=useState(false)\r\n    const [btn,setButton]=useState(false)\r\n    const [stud,setStud]=useState(true)\r\n    const [password,setPassword]=useState('')\r\n    const [login,setLogin]=useState(true)\r\n    const [phone,setPhone]=useState('')\r\n    const [signup,setSignup]=useState(false)\r\n    const [grade,setGrade]=useState('')\r\n    const color1=login?\"green\":\"blue\"\r\n    const color2=signup?\"green\":\"blue\"\r\n    const showButton = () => {\r\n        if (window.innerWidth <= 960) {\r\n          setButton(true);\r\n        } else {\r\n          setButton(false);\r\n        }\r\n      };\r\n      \r\n    const handleToggle1=()=>{\r\n        setTeach(true)\r\n        setStud(false)\r\n    }\r\n    const handleToggle2=()=>{\r\n        setStud(true)\r\n        setTeach(false)\r\n    }\r\n    const handleToggle3=()=>{\r\n        setLogin(true)\r\n        setSignup(false)\r\n    }\r\n    const handleToggle4=()=>{\r\n        setLogin(false)\r\n        setSignup(true)\r\n    }\r\n    async function signInWithGoogle(){\r\n        var username;\r\n        if(stud) username=\"StudentUsers\"\r\n        if(teach) username=\"TeacherUsers\"\r\n        const provider=new firebase.auth.GoogleAuthProvider()\r\n        provider.setCustomParameters({prompt: 'select_account'})\r\n        dispatch(setUser(username))\r\n        await auth.signInWithPopup(provider)\r\n        var z=auth.currentUser\r\n        var flag=0;\r\n        firestore.collection(`${username}`).get().then(query=>{\r\n            query.forEach((doc) => {\r\n                if(z.email===doc.data().email){\r\n                    flag=1;\r\n                    dispatch(setID(doc.id))\r\n                }\r\n            });\r\n            if(flag){\r\n                history.push(\"/\")\r\n                window.location.reload()\r\n            }\r\n            else{\r\n                setErr('You may be login with diff user (Student/Teacher) or maybe you are not registered')\r\n                auth.signOut()\r\n            }\r\n        })\r\n        \r\n    }\r\n    const handlePhone=(e)=>{\r\n        var num=e.target.value;\r\n        setPhone(num)\r\n        if(num.match(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/)&&num.length===10){\r\n            setDisable(false)\r\n            setErr('')\r\n        }\r\n        else{\r\n            setDisable(true)\r\n            setErr(\"Invalid Phone Number\")\r\n        }\r\n    }\r\n    const setUpRecaptcha=()=>{\r\n        window.recaptchaVerifier = new firebase.auth.RecaptchaVerifier('recaptcha', {\r\n            'size': 'invisible',\r\n            'callback': function(response) {\r\n              // reCAPTCHA solved, allow signInWithPhoneNumber.\r\n              handleOTP();\r\n            },\r\n            'expired-callback':()=>{\r\n                setErr(\"Response expired. Please solve reCAPTCHA again.\")\r\n            }\r\n          });\r\n       }\r\n    const handleOTP=(e)=>{\r\n        e.preventDefault()\r\n        if(!phone.match(/^(\\+\\d{1,3}[- ]?)?\\d{10}$/)){\r\n            return;\r\n        }\r\n        setDisable(true)\r\n        setUpRecaptcha()\r\n        setErr(\"Please Enter OTP Coming As Prompt!\")\r\n        var phoneNumber = \"+91\"+phone\r\n        var appVerifier = window.recaptchaVerifier;\r\n        auth.signInWithPhoneNumber(phoneNumber, appVerifier)\r\n            .then(function (confirmationResult) {\r\n              // SMS sent. Prompt user to type the code from the message, then sign the\r\n              // user in with confirmationResult.confirm(code).\r\n              window.confirmationResult = confirmationResult;\r\n                var code = window.prompt(\"Enter the OTP\")\r\n                confirmationResult.confirm(code).then(function (result) {\r\n                // User signed in successfully.\r\n                var user = result.user;\r\n                if(user){\r\n                    swal({\r\n                        title: \"OTP Verified!\",\r\n                        text: \"You mobile no. is verified! Proceed further and fill all remaining details!\",\r\n                        icon:\"success\",\r\n                    })\r\n                    setErr(\"\")\r\n                    IsVerified(true)\r\n                }\r\n                }).catch(function (error) {\r\n                // User couldn't sign in (bad verification code?)\r\n                // ...\r\n                swal({\r\n                    title:\"Not Verified\",\r\n                    text:\"Incorrect or Bad Verification Code\",\r\n                    icon: \"warning\"\r\n                }).then(res1=>{\r\n                    window.location.reload()\r\n                })\r\n                setErr(error.message+\" Reload and Try Again\")\r\n                });\r\n                            }).catch(function (error) {\r\n                            // Error; SMS not sent\r\n                            // ...\r\n                            swal({\r\n                                title:\"Some error Occured. Try Again Later!\",\r\n                                text:\"SMS not sent. Retry!\",\r\n                                icon: \"warning\",\r\n                                confirmButtonClass: \"btn-danger\",\r\n                                confirmButtonText: \"Retry\",   \r\n                            }).then(res1=>{\r\n                                window.location.reload()\r\n                            })\r\n                            setErr(error.message+\" Reload and Try Again\")\r\n                            });\r\n    }\r\n    async function handleResetPassword(e){\r\n        e.preventDefault();\r\n        var x=window.prompt(\"Enter your existing Email Id\")\r\n        if(x){\r\n            try{\r\n                var user=await auth.fetchSignInMethodsForEmail(x)\r\n                if(user.length===0){\r\n                    setErr('Please register! Your email is not registered or please enter the existing Email')\r\n                }\r\n                else{\r\n                    auth.sendPasswordResetEmail(x)\r\n                    setErr(\"Reset password link has been sent to your email!\")\r\n                }\r\n            }catch(err){\r\n                setErr(err.message)\r\n            }\r\n        }\r\n    }\r\n    async function handleLogin(e){\r\n        e.preventDefault()\r\n        try{\r\n            var username;\r\n            if(stud) username=\"StudentUsers\"\r\n            if(teach) username=\"TeacherUsers\"\r\n            dispatch(setUser(username))\r\n            await auth.signInWithEmailAndPassword(email,password)\r\n            var z=auth.currentUser\r\n            const userRef=firestore.doc(`${username}/${z.uid}`)\r\n            const snapShot=await userRef.get()\r\n            if(!snapShot.exists){\r\n                dispatch(setVerify(false))\r\n                setErr('You are trying to get login as different user (Student/Teacher)')\r\n                auth.signOut()\r\n                //window.location.reload()\r\n            }\r\n            else{\r\n                if(z.emailVerified){\r\n                    dispatch(setID(z.uid))\r\n                    history.push(\"/\")\r\n                    setErr(\"\")\r\n                    window.location.reload()\r\n                }\r\n                else{\r\n                    dispatch(setVerify(true))\r\n                    z.sendEmailVerification()\r\n                    setErr('Please Verify the mail and Log In!')\r\n                }\r\n            }\r\n        }catch(error){\r\n            setErr(error.message)\r\n            console.log(error.message)\r\n        }\r\n    }\r\n    async function handleRegister(e){\r\n        e.preventDefault()\r\n        if(!verify){\r\n            setErr(\"Please verify the PhoneNumber\")\r\n            return;\r\n        }\r\n        if(grade===''){\r\n            setErr('Please provide your Grade and then Register!')\r\n            return;\r\n        }\r\n        if(state===\"\"){\r\n            setErr(\"Please provide your State and then Register\")\r\n            return ;\r\n        }\r\n        try{\r\n            var username;\r\n            if(stud){\r\n                username=\"StudentUsers\";\r\n            }\r\n            if(teach){\r\n                username=\"TeacherUsers\";\r\n            }\r\n            const {user}=await auth.createUserWithEmailAndPassword(email,password)\r\n            var displayName=Fname+\" \"+Lname\r\n            displayName=displayName.toUpperCase()\r\n            createUserProfileDocument(user,username,{displayName,grade,phone,state,pin})\r\n            setLogin(true)\r\n            setSignup(false)\r\n            setErr('')\r\n        }catch(error){\r\n            setErr(error.message)\r\n            console.log(error.message)\r\n        }\r\n    }\r\n    \r\n    var data=[\"Andhra Pradesh\",\"Arunachal Pradesh\",\"Assam\",\"Bihar\",\"Chhattisgarh\",\"Goa\",\"Gujarat\",\"Haryana\",\"Himachal Pradesh\",\"Jharkhand\",\"Karnataka\",\"Kerala\",\"Madhya Pradesh\",\"Maharashtra\",\"Manipur\",\"Meghalaya\",\"Mizoram\",\"Nagaland\",\"Odisha\",\"Punjab\",\"Rajasthan\",\"Sikkim\",\"Tamil Nadu\",\"Telangana\",\"Tripura\",\"Uttar Pradesh\",\"Uttarakhand\",\"West Bengal\",\"Andaman and Nicobar\",\"Chandigarh\",\"Daman and Diu\",\"Dadar and Nagar Haveli\",\"Delhi\",\"Jammu and Kashmir\",\"Ladakh\",\"Lakshadweep\",\"Puducherry\"]\r\n    data.sort()\r\n    data=data.map(item => item.toUpperCase())\r\n      useEffect(() => {\r\n        showButton();\r\n        window.addEventListener('resize', showButton);\r\n      }, []);\r\n      var change=btn?\"34%\":\"38%\"\r\n    return (\r\n        <div className=\"initial\">\r\n            <div className=\"container\">\r\n                <section className=\"toggle-container\">\r\n                    <Button buttonStyle=\"btn--outline\" buttonSize={btn?\"btn-medium\":\"btn--wide\"} buttonColor={teach?\"green\":\"blue\"} onClick={handleToggle1}>Teacher</Button>\r\n                    <Button buttonStyle=\"btn--outline\" buttonSize={btn?\"btn-medium\":\"btn--wide\"} buttonColor={stud?\"green\":\"blue\"} onClick={handleToggle2}>Student</Button>\r\n                </section>\r\n                <section className=\"form-container\">\r\n                    <div className=\"toggle\">\r\n                        <button className={`signin ${color1}`} onClick={handleToggle3}>Sign In</button>\r\n                        <button className={`signin ${color2}`} onClick={handleToggle4}>Sign Up</button>\r\n                    </div>\r\n                    {\r\n                        login?(\r\n                            <>\r\n                                <p style={{color:\"green\",marginLeft:\"28%\",marginTop:\"5px\"}}>Login As a {stud?\"Student\":\"Teacher\"}</p>\r\n                            {\r\n                                currentVer?<p style={{color:\"green\",margin:\"7px\"}}>Please Verify Your Email And Log In Again (Link Has Been Sent)!</p>:null\r\n                            }\r\n                            {\r\n                                currentUser?<p style={{color:\"green\",marginLeft:\"35%\",marginTop:\"5px\"}}>You are Logged In!</p>:null\r\n                            }\r\n                            {\r\n                                err? <p style={{color:\"red\",margin:\"7px\"}}>{err}</p>: \"\"\r\n                            }\r\n                            <form onSubmit={handleLogin}>\r\n                                <FormInput type=\"text\" value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Email\" required />\r\n                                <FormInput type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} placeholder=\"Password\" required />\r\n                               \r\n                                <span style={{marginLeft:change}}><Button type=\"submit\" buttonStyle=\"btn--primary\" buttonColor=\"green\" buttonSize={btn?\"btn--mobile\":\"btn--medium\"}>Login</Button></span>\r\n                            </form>\r\n                            <button className=\"reset\" onClick={handleResetPassword}>Reset Password</button>\r\n                                <span style={{marginLeft:\"44%\",fontWeight:\"bold\",color:\"black\"}}>Or</span>\r\n                                <button className=\"signinwithGoogle\" onClick={signInWithGoogle}>Sign In With Google</button>\r\n                            </>\r\n                        ):(\r\n                            <>\r\n                             <p style={{color:\"green\",marginLeft:\"28%\",marginTop:\"5px\"}}>Register As a {stud?\"Student\":\"Teacher\"}</p>\r\n                            {\r\n                                err? <p style={{color:\"red\",margin:\"7px\"}}>{err}</p>: \"\"\r\n                            }\r\n                            <form onSubmit={handleRegister}>\r\n                                <FormInput type=\"text\" value={Fname}  onChange={(e)=>setFname(e.target.value)} placeholder=\"First Name\" required />\r\n                                <FormInput type=\"text\" value={Lname} onChange={(e)=>setLname(e.target.value)} placeholder=\"Last Name\" required />\r\n                                <select className=\"select\" onChange={(e)=>setGrade(e.target.value)}>\r\n                                    <option value=\"\">Grade</option><option value=\"7\">7</option><option value=\"8\">8</option><option class=\"9\">9</option><option value=\"10\">10</option>\r\n                                </select>\r\n                                <FormInput type=\"email\" value={email} onChange={(e)=>setEmail(e.target.value)} placeholder=\"Email\" required />    \r\n                                {\r\n                                    verify?<FormInput type=\"phone\" value={phone} onChange={handlePhone} placeholder=\"Phone No.\" disabled required />:<FormInput type=\"phone\" value={phone} onChange={handlePhone} placeholder=\"Phone No.\" required />\r\n                                }\r\n                                {\r\n                                    verify?<p style={{marginLeft:\"18%\",color:\"green\"}}>PhoneNumber is Verified</p>:<Button point={disable} id=\"recaptcha\" buttonStyle=\"btn--primary\" buttonColor=\"blue\" buttonSize=\"btn--medium\" onClick={handleOTP}>Get OTP</Button>\r\n                                    \r\n                                }\r\n                                \r\n                                \r\n                                    <select className=\"select\" style={{backgroundColor: \"white\"}} onChange={(e)=>setState(e.target.value)}>\r\n                                        <option value=\"\">State/Union Territory</option> \r\n                                    {\r\n                                        data.map((item,i)=>{\r\n                                            return(\r\n                                                <option key={i} value={item}>{item}</option>\r\n                                            )\r\n                                        })\r\n                                    }    \r\n                                    </select>\r\n                               \r\n                                <FormInput type=\"number\"  value={pin} onChange={(e)=>Setpin(e.target.value)} placeholder=\"PIN Code\" required />\r\n                                <FormInput type=\"password\" value={password} onChange={(e)=>setPassword(e.target.value)} placeholder=\"Password\" required />\r\n                                <span style={{marginLeft:change}}><Button type=\"submit\" buttonStyle=\"btn--primary\" buttonColor=\"green\" buttonSize={btn?\"btn--mobile\":\"btn--medium\"}>Register</Button></span>\r\n                            </form>\r\n                            </>\r\n                        )\r\n                    }\r\n                </section>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapStateToProps=(state)=>({\r\n    currentUser: state.user.currentUser,\r\n    currentVer: state.userError.currentVer,\r\n    currentErr: state.userError.error\r\n})\r\n\r\nexport default withRouter(connect(mapStateToProps,null)(Signin))\r\n/*\r\n\r\n\r\n        var x= await fetch(\"http://127.0.0.1:8000/api/register/\",{\r\n            method: \"POST\",\r\n            body: JSON.stringify(data),\r\n            headers:{\r\n                'Content-type': 'application/json; charset=UTF-8',\r\n            },\r\n        }).then((res)=>{\r\n            if(res.ok){\r\n                console.log(res.json())\r\n            }\r\n            else{\r\n                res.json().then(err=>console.log(err.Error))\r\n            }\r\n        })\r\n\r\n\r\n\r\n        \r\n\r\n*/\r\n"]},"metadata":{},"sourceType":"module"}